using Gtk 4.0;
using Adw 1;

template $MainWindow: Adw.ApplicationWindow {
  width-request: 500;
  height-request: 700;
  default-width: 1000;
  default-height: 1000;
  title: _("Unsaved - Xournal++");

  Adw.Breakpoint {
    condition ("max-width: 400sp")

    setters {
      split_view.collapsed: true;
    }
  }

  content: Adw.ToolbarView {
    top-bar-style: raised;

    [top]
    Adw.HeaderBar {
      [start]
      Box {
        orientation: horizontal;

        ToggleButton show_sidebar_button {
          icon-name: "dock-left";
          tooltip-text: _("Toggle Sidebar");
          active: bind split_view.show-sidebar;
        }
      }

      [end]
      Box {
        orientation: horizontal;

        MenuButton primary {
          icon-name: "open-menu-symbolic";
          tooltip-text: _("Main Menu");
          menu-model: primary_button_menu;
          primary: true;
        }
      }
    }

    content: Adw.OverlaySplitView split_view {
      show-sidebar: bind show_sidebar_button.active;

      sidebar: Box {
        orientation: horizontal;
        halign: center;
        valign: start;
        spacing: 12;

        Box {
          orientation: vertical;
          spacing: 12;
          margin-start: 6;
          margin-end: 6;
          margin-top: 6;
          margin-bottom: 6;

          Button button_preview {
            icon-name: "xopp-sidebar-layer";
            clicked => $on_button_preview_clicked();
          }

          Button button_workspace {
            icon-name: "xopp-sidebar-layerstack";
            clicked => $on_button_workspace_clicked();
          }

          Button button_library {
            icon-name: "library-symbolic";
            clicked => $on_button_library_clicked();
          }
        }

        Stack stack {
          StackPage page_preview {
            title: _("Preview");
            name: "page_preview";

            child: Box {
              orientation: vertical;

              Adw.ViewSwitcher nested_switcher {
                stack: viewStack;
              }

              Adw.ViewStack viewStack {
                Adw.ViewStackPage viewpage_page {
                  title: _("Pages");
                  icon-name: "xopp-sidebar-page-preview";

                  child: Adw.StatusPage {
                    Label {
                      label: "Page preview";
                    }
                  };
                }

                Adw.ViewStackPage viewpage_layer {
                  title: _("Layers");
                  icon-name: "xopp-sidebar-layer";

                  child: Adw.StatusPage {
                    Label {
                      label: "Layer preview";
                    }
                  };
                }

                Adw.ViewStackPage viewpage_layerstack {
                  title: _("Layer stack");
                  icon-name: "xopp-sidebar-layerstack";

                  child: Adw.StatusPage {
                    Label {
                      label: "Layerstack preview";
                    }
                  };
                }
              }
            };
          }

          StackPage page_workspace {
            title: _("Workspace");
            name: "page_workspace";

            child: Adw.StatusPage {
              Label {
                label: "Workspace for working with documents";
              }
            };
          }

          StackPage page_library {
            title: _("Library");
            name: "page_library";

            child: Adw.StatusPage {
              Label {
                label: "Library of shapes";
              }
            };
          }
        }
      };

      content: Box content_box {
          orientation: vertical;
          hexpand: true;
          vexpand: true;
        DrawingArea drawing_area {
          width-request: 100;
          height-request: 100;
          content-width: 600;
          content-height: 900;
          GestureClick {
            pressed => $on_gestureclick_pressed();
            released => $on_gestureclick_released();
            stopped => $on_gestureclick_stopped();
            unpaired-release => $on_gestureclick_unpaired_release();
          }
          GestureRotate {
            angle-changed => $on_gesturerotate_angle_changed(); 
          }
          GestureZoom {
            scale-changed => $on_gesturezoom_scale_changed();
          }
          GestureStylus {
            stylus-only: true;  // With the X11 backend there are no signals with the stylus though
            down => $on_gesturestylus_down();
            motion => $on_gesturestylus_motion();
            proximity => $on_gesturestylus_proximity();
            up => $on_gesturestylus_up();
          }
        }
      };
    };
  };
}

menu primary_button_menu {
  section {
    item {
      label: _("Preferences");
      action: "app.preferences";
    }

    item {
      label: _("Keyboard Shortcuts");
      action: "win.show-help-overlay";
    }

    item {
      label: _("Help");
      action: "app.help";
    }

    item {
      label: _("About Xournal++");
      action: "app.about";
    }
  }
}

